#textdomain wesnoth-The_Lord_of_The_Rings_Mod

#define ABILITY_CAPTION _CAPTION
{_CAPTION}+":
"#enddef

#define ABILITY_CAVALRYLINE

    [dummy]
        id=eeawcavline
        name= _ "cavalry line"
        description=_"When this unit stands near a unit with the same ability, both receive +1 to damage."
    [/dummy]
#enddef

#define WEAPON_SPECIAL_CAVALRYLINE
    [damage]
        id=eeawcavline2
        #name= _ " "
        #description=_"."
        add=3
        apply_to=self
        [filter_self]
            [filter_adjacent]
                ability=eeawcavline
                is_enemy=false
            [/filter_adjacent]
        [/filter_self]
    [/damage]
#enddef

#define ABILITY_SHIELDWALL
    # Canned definition of the Steadfast ability to be included in an [abilities]
    # clause.
    [resistance]
        id=shieldwall
		[filter_self]
            [filter_adjacent]
                ability=shieldwall
                is_enemy=false
            [/filter_adjacent]
        [/filter_self]
        multiply=2
        max_value=100
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        name= _ "shield wall"
        female_name= _ "female^shield wall"
        description= _ "This unit’s resistances are doubled, When it is standing next to another unit with the same ability when defending. Vulnerabilities are not affected."
        affect_self=yes
        active_on=defense
    [/resistance]
#enddef

#define ABILITY_FORMATION_LOTR
    # Canned definition of the Steadfast ability to be included in an [abilities]
    # clause.
    [resistance]
        id=formation
        multiply=2
        max_value=35
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
		[filter_self]
            [filter_adjacent]
                ability=formation
                is_enemy=false
            [/filter_adjacent]
        [/filter_self]
        [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        name= _ "formation"
        female_name= _ "female^formation"
        description= _ " When standing next to another with the same ability, This unit’s resistances are doubled, up to a maximum of 50%, when defending. Vulnerabilities are not affected."
        affect_self=yes
        active_on=defense
    [/resistance]
#enddef

#define ABILITY_SHOCK_TROOP

#enddef

#define ABILITY_MEDIUM_INFANTRY
   [resistance]
      id=Medium_Infantry
	  name= _ "Infantry"
	  [filter_self]
         [filter_adjacent]
             ability=Medium_Infantry
             is_enemy=false
          [/filter_adjacent]
	   [/filter_self]
	   add=10
	   max_value=50
	    [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        female_name= _ "female^Infantry"
        description= _ "increases all of this units resistances by 10% when standing next to a unit with the same ability."
        affect_self=yes
	[/resistance]
#enddef

#define ABILITY_HEAVY_INFANTRY
#enddef

#define ABILITY_LIGHT_CAVALRY
#enddef

#define ABILITY_HEAVY_CAVALRY
#enddef

#define WEAPON_SPECIAL_FLANKING_LOTR
    # Canned definition of the Backstab ability to be included in a
    # [specials] clause.
    [damage]
        id=flanking
        name= _ "flanking"
        description= _ "When used offensively, this attack deals double damage if there is an enemy of the target on the opposite side of the target, and that unit is not incapacitated (turned to stone or otherwise paralyzed)."
        multiply=2
        active_on=offense
        [filter_opponent]
            formula="
                enemy_of(self, flanker) and not flanker.petrified
            where
                flanker = unit_at(direction_from(loc, other.facing))
            "
        [/filter_opponent]
    [/damage]
#enddef


#define WEAPON_SPECIAL_FLANKING_ARCHERS_LOTR
    [chance_to_hit]
        id=archer_flanking
        add=10
        apply_to=self
        cumulative=yes
        #name= _ " "
        #description=_"."
        [filter_opponent]
            [filter_adjacent]
                ability=archer_flanking
                count=2-6
                is_enemy=true
            [/filter_adjacent]
        [/filter_opponent]
    [/chance_to_hit]
#enddef

#define ABILITY_CAVALRY_MASTER_LOTR
    [leadership]
        id=lotrcavalry
        value=50
        cumulative=no
        name=_"Cavalry Leader"
        description=_"Makes all adjacent friendly mounted units fight better (+50% for attack)."
        affect_self=no
        affect_allies=yes
        affect_enemies=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                units=
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef



#define ABILITY_ALLIANCE_LOTR
	[leadership]
		id=alliance
		value=35
		cumulative=no
		name= _ "alliance"
		female_name= _ "female^alliance"
		description= _ "This unit is very well versed in team tactics so that adjacent units with the same ability deal 35% more damage."
		affect_self=no
		[affect_adjacent]
			[filter]
				ability=alliance
			[/filter]
		[/affect_adjacent]
	[/leadership]
#enddef

#define WEAPON_SPECIAL_STRUGGLE_LOTR
	[chance_to_hit]
		id=struggle
		name= _ "struggle"
		name_inactive= _ "struggle"
		description= _ "This attack causes the opponent to have a 10% lower chance to hit."
		description_inactive= _ "This attack causes the opponent to have a 10% lower chance to hit."
		sub=10
		apply_to=opponent
		cumulative=yes
	[/chance_to_hit]
#enddef

#define WEAPON_SPECIAL_PHALYNX
    # Canned definition of the Shock ability to be included in a
    # [specials] clause.
    [attacks]
        id=Phalynx
        name= _ "Phalynx"
        description= _ "When this attack is used, the opponent will retaliate with one less strike than normally, to a minimum of one strike."
        sub=1
        apply_to=opponent
        [filter_base_value]
            greater_than=1
        [/filter_base_value]
    [/attacks]
#enddef

#define WEAPON_SPECIAL_SHOCK
    # Canned definition of the Shock ability to be included in a
    # [specials] clause.
    [attacks]
        id=shock
        name= _ "Shock"
        description= _ "When this attack is used on offense, the opponent will retaliate with one less strike than normally, to a minimum of one strike."
        sub=1
		active_on=offense
        apply_to=opponent
        [filter_base_value]
            greater_than=1
        [/filter_base_value]
    [/attacks]
#enddef

#define __ABILITY_TSTRING_DAUNTLESS_NAME
    _ "dauntless"#enddef
#define __ABILITY_TSTRING_DAUNTLESS_DESC
    {ABILITY_CAPTION ( _ "Dauntless")}+ _ "While attacking, this unit's resistances are doubled, up to a maximum of 50. Weaknesses are not affected."#enddef

#define ABILITY_DAUNTLESS
    [resistance]
        id=dauntless
        name={__ABILITY_TSTRING_DAUNTLESS_NAME}
        description={__ABILITY_TSTRING_DAUNTLESS_DESC}
        name_inactive={__ABILITY_TSTRING_DAUNTLESS_NAME}
        description_inactive={__ABILITY_TSTRING_DAUNTLESS_DESC}
		max_value=100
        multiply=2
        apply_to=blade,pierce,impact,fire,cold,arcane,armour_piercing
        [filter_base_value]
            greater_than=0
        [/filter_base_value]
        active_on=offense
    [/resistance]
#enddef

#define ABILITY_DARKENS_GREAT
	[illuminates]
		id=darkens severely
		description= _ "This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight almost as if it were night when it is day, as if it were darker than the darkest night when it is dusk and the improvement of the chaotic units during the night is incredible."
		female_name=_"female^darkens severely"
		id=darkens
		name= _ "darkens severely"
		value=-40
		min_value=-50
		max_value=25
		cumulative=no
		affect_self=yes
	[/illuminates]
#enddef

#define ABILITY_LOTR_SNOW_AMBUSH
	[hides]
		id=lotr_snow_ambush
		name= _ "snow ambush"
		female_name= _ "female^snow ambush"
		name_inactive= _ "snow ambush"
		female_name_inactive= _ "female^snow ambush"
		description= _ "This unit can hide on frozen terrains, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on frozen terrains, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
		description_inactive= _ "This unit can hide on frozen terrains, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on frozen terrains, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
		affect_self=yes
		[filter_self]
			[filter_location]
				terrain=A*,Ai^*,Ha,Ha^*,Ms
			[/filter_location]
		[/filter_self]
	[/hides]
#enddef

#define ABILITY_LOTR_AMBUSH
	[hides]
		id=lotr_ambush
		name= _ "ambush"
		female_name= _ "female^ambush"
		name_inactive= _ "ambush"
		female_name_inactive= _ "female^ambush"
		description= _ "This unit can hide on most terrains, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on most terrains, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
		description_inactive= _ "This unit can hide on most terrains, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on frozen terrains, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
		affect_self=yes
		[filter_self]
			[filter_location]
				terrain=*^F*
			[/filter_location]
		[/filter_self]
	[/hides]
#enddef

#define ABILITY_CYCLE_CHARGE
	[dummy]
		id=cycle_charge
		name= _ "cycle charge"
		female_name= _ "female^cycle_charge"
		name_inactive= _ "cycle charge"
		female_name_inactive= _ "female^cycle charge"
		description= _ "This unit has the ability to cycle charge, by charging in and pulling out, so that they can tactically always take advantage of the charge without falling into prolonged battle."
	[/dummy]
#enddef
#define WEAPON_SPECIAL_KNOCKBACK
	[damage]
		id=knockback
		name= _ "knockback"
		description= _ "When this attack is used offensively, at the end of the fight the enemy will be knocked back."
		name_inactive= _ "knockback"
		female_name_inactive= _ "female^knockback"
	[/damage]
#enddef

#define KNOCKBACK_EVENT
	[event]
		name=attack end
		first_time_only=no

		[filter_attack]
			special=knockback
		[/filter_attack]
		[if]
			[variable]
				name=second_unit.hitpoints
				less_than_equal_to=1
			[/variable]
			[else]
				[store_unit]
					[filter]
						x,y=$x2,$y2
					[/filter]
					variable=knockbacked
					kill=yes
				[/store_unit]
				{VARIABLE knock_x $x2}
				{VARIABLE knock_y $y2}
				{VARIABLE_OP knock_x sub $x1}
				{VARIABLE_OP knock_y sub $y1}
				{VARIABLE_OP knockbacked.x add $knock_x}
				{VARIABLE_OP knockbacked.y add $knock_y}
				[unstore_unit]
					variable=knockbacked
					find_vacant=yes
					check_passability=yes
				[/unstore_unit]
				[if]
					[have_unit]
						id=$knockbacked.id
					[/have_unit]
					[else]
						[unstore_unit]
							variable=knockbacked
							find_vacant=yes
							x,y=$x2,$y2
							advance=no
						[/unstore_unit]
					[/else]
				[/if]
				[if]
					[variable]
						name=knockbacked.hitpoints
						less_than_equal_to=1
					[/variable]
					[then]
						[kill]
							id=$knockbacked.id
							animate=no
							experience=yes
							fire_event=yes
							[filter_second]
								x,y=$x1,$y1
							[/filter_second]
							[secondary_unit]
								x,y=$x1,$y1
							[/secondary_unit]
						[/kill]
						[fire_event]
							name=force respec
							[primary_unit]
								id=$unit.id
							[/primary_unit]
						[/fire_event]
					[/then]
				[/if]
				{CLEAR_VARIABLE knock_x,knock_y,knockbacked}
			[/else]
		[/if]
	[/event]
#enddef

#define WEAPON_SPECIAL_DRAGONSLAYER
	[damage]
		id=dragonslayer
		name= _ "dragonslayer"
		description= _ "This attack does double damage to drakes and dragons."
		multiply=2
		[filter_opponent]
			race=drake
			[or]
				type=Fire Dragon loti
			[/or]
			[or]
				type=Ice Dragon
			[/or]
			[or]
				type=Dark Dragon
			[/or]
			[or]
				type=Skeletal Dragon
			[/or]
			[or]
				type=Dracolich
			[/or]
		[/filter_opponent]
	[/damage]
#enddef

#define ABILITY_LOTR_FORCEDMARCH
    [dummy]
        id=lotrforcedmarch
        name= _ "cycle charge"
        description=_ "This unit gains 2 moves back after successfully killing enemy unit, but cannot attack again."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=attack end
    first_time_only=no
    [filter_second]
        ability=lotrforcedmarch
    [/filter_second]

    {VARIABLE first_unit.moves 2}
    [unstore_unit]
        variable=first_unit
        {COLOR_HEAL}
        text= _ "FLEE!"
        find_vacant=no
    [/unstore_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_DRAIN_LOTR
    # Canned definition of the Drain ability to be included in a
    # [specials] clause.
    [drains]
        id=feed
        name= _ "feed"
        description= _ "This unit drains health from living units, healing itself for half the amount of damage it deals (rounded down)."
    [/drains]
#enddef

#define WEAPON_SPECIAL_SUPERIOR_STRENGTH

[damage]
  [affect_adjacent]
    [filter]
       formula="level < other.level"
    [/filter]
  [/affect_adjacent]
	   id=superior_strength
	   name=_ "superior strength"
	   description=_ "If this unit attacks a unit of lower level he will gain 5 damage"
	   affect_self=yes
	   add=5
[/damage]
#enddef

